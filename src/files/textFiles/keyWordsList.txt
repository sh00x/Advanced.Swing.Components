abstract - deklaruje klase lub metode jako abstrakcyjna,
boolean - deklaruje zmienna lub wartosc zwracana jako wartosc logiczna,
break - przerwanie,
byte - deklaruje zmienna lub wartosc zwracana jako wartosc byte,
case - okresla opcje w instrukcji wyboru switch,
catch - obsluguje wyjatek,
char - deklaruje zmienna lub wartosc zwracana jako wartosc znaku,
class - oznacza poczatek definicji klasy, const,
continue - przerywa petle rozpoczynajac jej kolejny cykl,
default - okresla domyslne dzialanie dla instrukcji wyboru switch,
do - rozpoczyna blok instrukcji w petli while,
double - deklaruje zmienna lub wartosc zwracana jako wartosc rzeczywista o podwójnej precyzji,
else - okresla kod warunkowy do wykonania jesli nie jest spelniony warunek w instrukcji if,
extends - okresla, ze definiowana klasa dziedziczy z innej,
final - okresla pole, metode lub klase jako stala,
finally - gwarantuje wykonywalnosc blok kodu,
float - deklaruje zmienna lub wartosc zwracana jako wartosc rzeczywista,
for - okresla poczatek petli for, goto,
if - okresla poczatek instrukcji warunkowej if,
implements - deklaruje, ze klasa korzysta z danego interfejsu,
import - okresla dostep do pakietów i klas,
instanceof - sprawdza czy dany obiekt jest wystapieniem okreslonej klasy,
int - deklaruje zmienna lub wartosc zwracana jako wartosc calkowita 4 bajtowa,
interface - okresla poczatek definicji interfejsu,
long - deklaruje zmienna lub wartosc zwracana jako wartosc calkowita 8 bajtowa,
native - okresla, ze metoda jest tworzona w kodzie danej platformy (np. C),
new - wywoluje nowy obiekt,
package - okresla nazwe pakietu do którego nalezy dana klasa,
private - deklaruje metode lub pole jako prywatne,
protected - deklaruje metode lub pole jako chronione,
public - deklaruje metode lub pole jako dostepne,
return - okresla zwracanie wartosci metody,
short - deklaruje zmienna lub wartosc zwracana jako wartosc calkowita 2 bajtowa,
static - deklaruje pole, metode lub kod jako statyczny,
super - odniesienie do rodzica danego obiektu,
switch - poczatek instrukcji wyboru,
synchronized - oznacza fragment kodu jako synchronizowany,
this - odniesienie do aktualnego obiektu,
throw - zglasza wyjatek,
throws - deklaruje wyjatek zglaszany przez metode,
transient - oznacza blokade pola przed szeregowaniem,
try - poczatek bloku kodu, który moze wygenerowac wyjatek,
void - deklaruje, ze metoda nie zwraca zadnej wartosci,
volatile - ostrzega kompilator, ze zmienna moze sie zmieniac asynchronicznie,
while - poczatek petli.
przy czym slowa kluczowe const (stala) oraz goto (skok do) sa zarezerwowane lecz nie uzywane. 